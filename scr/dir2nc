#!/usr/bin/perl -w
#
# NAME:
# dir2nc
#
# PURPOSE:
# To generate NetCDF files for a directory full of ASCII files. 
#
# REQUIREMENTS:
# NA
#
# INPUT:
# NA
#
# OUTPUT:
# NA
#
# NOTES:
# Thsi was originally developed to handle ITP data from WHOI, and is
# yet not fully flexible and handling commandline configuration for other
# file formats.
#
# BUGS:
# When applied to ITP data, some profiles seem to generate incorrect
# NetCDF files. The reason for this is yet not known as they look OK as do
# the CDL files.
#
# AUTHOR:
# Øystein Godøy, METNO/FOU, 15.02.2009
#
# MODIFIED:
# NA
#
# CVS_ID:
# $Id: dir2nc,v 1.6 2009-03-10 11:06:49 steingod Exp $
#

use strict;
use Getopt::Std;

use vars qw($opt_i $opt_o);

sub usage;

my($ifd,$ofd,$dirname);
my(@files,$file,$newfile); my $txt2cdl = "./txt2cdl";
my $template = "../etc/template_ctd.cdl";
my $format = "itp";
my $ncgen = "/usr/bin/ncgen -b";

usage if !getopts('i:o:');
usage if ((! $opt_i) || (!$opt_o));
$ifd = $opt_i;
$ofd = $opt_o;

$dirname = $ofd;
$dirname =~ s/^(\/.+\/)//g;

opendir(DIR, $ifd) || die "can't open $ifd $!";
@files = readdir(DIR);
closedir(DIR);

foreach $file (@files) {
    next if ($file !~ /grd.+dat$/);
    $newfile = $dirname."_".$file;
    $newfile =~ s/\.dat/\.cdl/;
    print "Converting $file to $newfile\n";
    system("$txt2cdl -i $ifd/$file -o $ofd/$newfile -m $template -f $format;$ncgen -b $ofd/$newfile;rm $ofd/$newfile");
}

exit;

sub usage {
    print "dir2nc -i <idir> -o <odir>\n";
    print "\tidir: input directory\n";
    print "\todir: output directory\n";
    exit;
}
