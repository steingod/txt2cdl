#!/usr/bin/perl -w
#
# NAME:
# radobsdir2nc
#
# PURPOSE:
# To generate NetCDF files for a directory full of ASCII files. NetCDF
# files are located within the same directory and a gzipped tar file is
# generated.
#
# REQUIREMENTS:
# NA
#
# INPUT:
# NA
#
# OUTPUT:
# NA
#
# NOTES:
#
# BUGS:
#
# AUTHOR:
# Øystein Godøy, METNO/FOU, 2013-06-20 
#
# MODIFIED:
#
# CVS_ID:
# $Id: radobsdir2nc,v 1.3 2013-08-29 12:57:21 steingod Exp $
#

use strict;
use Getopt::Std;
use encoding "utf-8";

use vars qw($opt_i $opt_o);

sub usage;

my($ifd,$ofd,$dirname,@tmp,$tgzfile,$ncfile);
my(@files,$file,$newfile,@files2tar,$status); 
my $txt2cdl = "./txt2cdl";
my $template = "../etc/template_radflux.cdl";
my $format = "metnoradflux";
my $ncgen = "/usr/bin/ncgen -b";
my $ncrcat = "/usr/bin/ncrcat -h";
my $tarcmd = "/bin/tar";

usage if !getopts('i:o:');
usage if ((! $opt_i));
$ifd = $opt_i;
$ofd = $ifd;

$dirname = $ofd;
@tmp = split /\//,$dirname;
$dirname = $tmp[$#tmp];

$tgzfile = "radflux"."_"."$dirname".".tgz";

opendir(DIR, $ifd) || die "can't open $ifd $!";
@files = readdir(DIR);
closedir(DIR);

foreach $file (sort(@files)) {
    $status = 0;
    next if ($file !~ /\.dat$/);
    ##$newfile = $dirname."_".$file;
    $newfile = $file;
    $newfile =~ s/\.dat/\.cdl/;
    $ncfile = $newfile;
    $ncfile =~ s/\.cdl/\.nc/;
    print "Converting $file to $ncfile\n";
    $status = system("$txt2cdl -i $ifd/$file -o $ofd/$newfile -m $template -f $format;");
    next if ($status);
    $status = system("$ncgen -b $ofd/$newfile -o $ofd/$ncfile;rm $ofd/$newfile");
    warn "Could not manage $newfile" if ($status);
    push @files2tar,"$ncfile";
}

system("cd $ofd;$tarcmd -cvzf $ofd/$tgzfile @files2tar");

system("cd $ofd;$ncrcat @files2tar radflux_$dirname.nc");

exit;

sub usage {
    print "$0 -i <idir>\n";
    print "\tidir: input directory\n";
    exit;
}
